name: Python application build and pre-release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Cache Poetry and pip dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~\pip
          key: ${{ runner.os }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pip.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry pyinstaller
          poetry install
      - name: Build
        run: |
          pyinstaller --onefile opener/main.py
      - name: Install semantic-release plugins
        run: |
          npm install @semantic-release/changelog @semantic-release/github
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
          branches: main
      - name: Install latest GitHub CLI
        run: |
          curl -LO https://github.com/cli/cli/releases/download/v2.4.0/gh_2.4.0_windows_amd64.msi
          msiexec.exe /i gh_2.4.0_windows_amd64.msi /quiet /qn /norestart
      - name: Create Release and Discussion
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if("${{ steps.semantic.outputs.new_release_published }}" -eq $true){
            gh release create ${{ steps.semantic.outputs.new_release_published }} --title "Release ${{ steps.semantic.outputs.new_release_published }}" --notes "${{ steps.semantic.outputs.new_release_notes }}" --draft=$false --prerelease=${{ github.event_name == 'pull_request' }}
            gh discussion create --category "Releases" --title "Release ${{ steps.semantic.outputs.new_release_published }}" --body "${{ steps.semantic.outputs.new_release_notes }}"
          }
